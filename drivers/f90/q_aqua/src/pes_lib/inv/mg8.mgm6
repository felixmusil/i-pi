> Attach("Magma/pack.m");
> _:=MolInvRngGen([8],6);
Group degree and order: 28 40320
Degrees of Primaries:
[ 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 7, 7, 7, 10, 12, 3, 12, 12, 
12, 12, 12, 12 ]
Number of primaries at each degree, and sums:
[ 0, 1, 2, 6, 3, 3, 2, 3, 0, 0 ]
[ 0, 1, 3, 9, 12, 15, 17, 20, 20, 20 ]
Dimensions of the Primaries Ring:
[ 1, 1, 3, 9, 15, 30, 63, 108, 192, 344 ]
[ 1, 2, 5, 14, 29, 59, 122, 230, 422, 766 ]
Expected Numbers of Secondaries, from Degree 0:
[ 1, 0, 0, -1, 9, 28, 88, 242, 751, 2269 ]
[ 1, 1, 1, 0, 9, 37, 125, 367, 1118, 3387 ]
Molien/Hilbert Series from Degree 0, and sums:
[ 1, 1, 3, 8, 23, 64, 197, 588, 1806, 5509 ]
[ 1, 2, 5, 13, 36, 100, 297, 885, 2691, 8200 ]
 v(0) = 1
Time: 0.010
Time: 0.600
Time: 0.010
Time: 0.000
Time: 0.000
Time: 0.010
Time: 0.000
Time: 0.020
Time: 0.030
Time: 0.000
Time: 0.200
Time: 0.620
 pv(0) = SYM d(i0,i1)^2*d(i0,i2)^2
 pv(1) = SYM d(i0,i1)^2*d(i0,i2)*d(i1,i2)
 pv(2) = SYM d(i0,i1)^2*d(i0,i2)*d(i0,i3)
 pv(3) = SYM d(i0,i1)^2*d(i1,i2)*d(i0,i3)
 pv(4) = SYM d(i0,i1)*d(i0,i2)*d(i1,i2)*d(i0,i3)
 pv(5) = SYM d(i0,i1)*d(i1,i2)^2*d(i0,i3)
 pv(6) = SYM d(i0,i2)*d(i1,i2)*d(i0,i3)*d(i1,i3)
 pv(7) = SYM d(i0,i1)*d(i1,i2)*d(i0,i3)*d(i0,i4)
 pv(8) = SYM d(i0,i2)*d(i1,i2)*d(i1,i3)*d(i0,i4)
 v(1:9) = pv(0:8)
Time: 0.000
Time: 1.560
Time: 9.000
 pv(9) = SYM d(i0,i1)^3*d(i0,i2)^2
 pv(10) = SYM d(i0,i1)^3*d(i0,i2)*d(i1,i2)
 pv(11) = SYM d(i0,i1)^2*d(i0,i2)^2*d(i1,i2)
 pv(12) = SYM d(i0,i1)^3*d(i0,i2)*d(i0,i3)
 pv(13) = SYM d(i0,i1)^2*d(i0,i2)^2*d(i0,i3)
 pv(14) = SYM d(i0,i1)^3*d(i1,i2)*d(i0,i3)
 pv(15) = SYM d(i0,i1)^2*d(i0,i2)*d(i1,i2)*d(i0,i3)
 pv(16) = SYM d(i0,i1)^2*d(i1,i2)^2*d(i0,i3)
 pv(17) = SYM d(i0,i1)*d(i0,i2)*d(i1,i2)^2*d(i0,i3)
 pv(18) = SYM d(i0,i1)*d(i1,i2)^3*d(i0,i3)
 pv(19) = SYM d(i0,i1)*d(i0,i2)*d(i1,i2)*d(i0,i3)^2
 pv(20) = SYM d(i0,i1)*d(i1,i2)^2*d(i0,i3)^2
 pv(21) = SYM d(i0,i1)*d(i0,i2)*d(i1,i2)*d(i0,i3)*d(i1,i3)
 pv(22) = SYM d(i0,i2)^2*d(i1,i2)*d(i0,i3)*d(i1,i3)
 pv(23) = SYM d(i0,i1)^2*d(i0,i2)*d(i0,i3)*d(i0,i4)
 pv(24) = SYM d(i0,i1)^2*d(i1,i2)*d(i0,i3)*d(i0,i4)
 pv(25) = SYM d(i0,i1)*d(i0,i2)*d(i1,i2)*d(i0,i3)*d(i0,i4)
 pv(26) = SYM d(i0,i1)*d(i1,i2)^2*d(i0,i3)*d(i0,i4)
 pv(27) = SYM d(i0,i1)*d(i1,i2)*d(i0,i3)^2*d(i0,i4)
 pv(28) = SYM d(i0,i1)*d(i0,i2)*d(i1,i2)*d(i1,i3)*d(i0,i4)
 pv(29) = SYM d(i0,i2)^2*d(i1,i2)*d(i1,i3)*d(i0,i4)
 pv(30) = SYM d(i0,i2)*d(i1,i2)*d(i0,i3)*d(i1,i3)*d(i0,i4)
 pv(31) = SYM d(i1,i2)^2*d(i0,i3)*d(i1,i3)*d(i0,i4)
 pv(32) = SYM d(i0,i1)*d(i1,i2)*d(i1,i3)*d(i2,i3)*d(i0,i4)
 pv(33) = SYM d(i1,i2)*d(i0,i3)*d(i2,i3)*d(i0,i4)*d(i1,i4)
 pv(34) = SYM d(i0,i1)*d(i1,i2)*d(i0,i3)*d(i0,i4)*d(i0,i5)
 pv(35) = SYM d(i0,i1)*d(i1,i2)*d(i1,i3)*d(i0,i4)*d(i0,i5)
 pv(36) = SYM d(i0,i2)*d(i1,i2)*d(i1,i3)*d(i0,i4)*d(i0,i5)
 v(10:37) = pv(9:36)
Time: 0.060
Time: 11.820
Time: 180.230
 pv(37) = SYM d(i0,i1)^5*d(i0,i2)
 pv(38) = SYM d(i0,i1)^4*d(i0,i2)^2
 pv(39) = SYM d(i0,i1)^3*d(i0,i2)^3
 pv(40) = SYM d(i0,i1)^4*d(i0,i2)*d(i1,i2)
 pv(41) = SYM d(i0,i1)^3*d(i0,i2)^2*d(i1,i2)
 pv(42) = SYM d(i0,i1)^2*d(i0,i2)^2*d(i1,i2)^2
 pv(43) = SYM d(i0,i1)^4*d(i0,i2)*d(i0,i3)
 pv(44) = SYM d(i0,i1)^3*d(i0,i2)^2*d(i0,i3)
 pv(45) = SYM d(i0,i1)^4*d(i1,i2)*d(i0,i3)
 pv(46) = SYM d(i0,i1)^3*d(i0,i2)*d(i1,i2)*d(i0,i3)
 pv(47) = SYM d(i0,i1)^2*d(i0,i2)^2*d(i1,i2)*d(i0,i3)
 pv(48) = SYM d(i0,i1)^3*d(i1,i2)^2*d(i0,i3)
 pv(49) = SYM d(i0,i1)^2*d(i0,i2)*d(i1,i2)^2*d(i0,i3)
 pv(50) = SYM d(i0,i1)^2*d(i1,i2)^3*d(i0,i3)
 pv(51) = SYM d(i0,i1)*d(i0,i2)*d(i1,i2)^3*d(i0,i3)
 pv(52) = SYM d(i0,i1)*d(i1,i2)^4*d(i0,i3)
 pv(53) = SYM d(i0,i1)^2*d(i0,i2)^2*d(i0,i3)^2
 pv(54) = SYM d(i0,i1)^2*d(i0,i2)*d(i1,i2)*d(i0,i3)^2
 pv(55) = SYM d(i0,i1)^2*d(i1,i2)^2*d(i0,i3)^2
 pv(56) = SYM d(i0,i1)*d(i0,i2)*d(i1,i2)^2*d(i0,i3)^2
 pv(57) = SYM d(i0,i1)*d(i1,i2)^3*d(i0,i3)^2
 pv(58) = SYM d(i0,i1)*d(i0,i2)*d(i1,i2)*d(i0,i3)^3
 pv(59) = SYM d(i0,i1)^2*d(i0,i2)*d(i1,i2)*d(i0,i3)*d(i1,i3)
 pv(60) = SYM d(i0,i1)*d(i0,i2)^2*d(i1,i2)*d(i0,i3)*d(i1,i3)
 pv(61) = SYM d(i0,i2)^3*d(i1,i2)*d(i0,i3)*d(i1,i3)
 pv(62) = SYM d(i0,i2)^2*d(i1,i2)^2*d(i0,i3)*d(i1,i3)
 pv(63) = SYM d(i0,i2)*d(i1,i2)^2*d(i0,i3)^2*d(i1,i3)
 pv(64) = SYM d(i0,i1)*d(i0,i2)*d(i1,i2)*d(i0,i3)*d(i1,i3)*d(i2,i3)
 pv(65) = SYM d(i0,i1)^3*d(i0,i2)*d(i0,i3)*d(i0,i4)
 pv(66) = SYM d(i0,i1)^2*d(i0,i2)^2*d(i0,i3)*d(i0,i4)
 pv(67) = SYM d(i0,i1)^3*d(i1,i2)*d(i0,i3)*d(i0,i4)
 pv(68) = SYM d(i0,i1)^2*d(i0,i2)*d(i1,i2)*d(i0,i3)*d(i0,i4)
 pv(69) = SYM d(i0,i1)^2*d(i1,i2)^2*d(i0,i3)*d(i0,i4)
 pv(70) = SYM d(i0,i1)*d(i0,i2)*d(i1,i2)^2*d(i0,i3)*d(i0,i4)
 pv(71) = SYM d(i0,i1)*d(i1,i2)^3*d(i0,i3)*d(i0,i4)
 pv(72) = SYM d(i0,i1)^2*d(i1,i2)*d(i0,i3)^2*d(i0,i4)
 pv(73) = SYM d(i0,i1)*d(i0,i2)*d(i1,i2)*d(i0,i3)^2*d(i0,i4)
 pv(74) = SYM d(i0,i1)*d(i1,i2)^2*d(i0,i3)^2*d(i0,i4)
 pv(75) = SYM d(i0,i1)*d(i1,i2)*d(i0,i3)^3*d(i0,i4)
 pv(76) = SYM d(i0,i1)^2*d(i0,i2)*d(i1,i2)*d(i1,i3)*d(i0,i4)
 pv(77) = SYM d(i0,i1)*d(i0,i2)^2*d(i1,i2)*d(i1,i3)*d(i0,i4)
 pv(78) = SYM d(i0,i2)^3*d(i1,i2)*d(i1,i3)*d(i0,i4)
 pv(79) = SYM d(i0,i2)^2*d(i1,i2)^2*d(i1,i3)*d(i0,i4)
 pv(80) = SYM d(i0,i1)*d(i0,i2)*d(i1,i2)*d(i0,i3)*d(i1,i3)*d(i0,i4)
 pv(81) = SYM d(i0,i2)^2*d(i1,i2)*d(i0,i3)*d(i1,i3)*d(i0,i4)
 pv(82) = SYM d(i0,i1)*d(i1,i2)^2*d(i0,i3)*d(i1,i3)*d(i0,i4)
 pv(83) = SYM d(i0,i2)*d(i1,i2)^2*d(i0,i3)*d(i1,i3)*d(i0,i4)
 pv(84) = SYM d(i1,i2)^3*d(i0,i3)*d(i1,i3)*d(i0,i4)
 pv(85) = SYM d(i1,i2)^2*d(i0,i3)^2*d(i1,i3)*d(i0,i4)
 pv(86) = SYM d(i0,i1)*d(i1,i2)^2*d(i1,i3)^2*d(i0,i4)
 pv(87) = SYM d(i0,i2)*d(i1,i2)^2*d(i1,i3)^2*d(i0,i4)
 pv(88) = SYM d(i0,i1)^2*d(i1,i2)*d(i1,i3)*d(i2,i3)*d(i0,i4)
 pv(89) = SYM d(i0,i1)*d(i0,i2)*d(i1,i2)*d(i1,i3)*d(i2,i3)*d(i0,i4)
 pv(90) = SYM d(i0,i1)*d(i1,i2)^2*d(i1,i3)*d(i2,i3)*d(i0,i4)
 pv(91) = SYM d(i1,i2)^2*d(i0,i3)*d(i1,i3)*d(i2,i3)*d(i0,i4)
 pv(92) = SYM d(i0,i2)*d(i1,i2)*d(i0,i3)*d(i1,i3)*d(i0,i4)^2
 pv(93) = SYM d(i1,i2)^2*d(i0,i3)*d(i1,i3)*d(i0,i4)^2
 pv(94) = SYM d(i0,i1)*d(i1,i2)*d(i1,i3)*d(i2,i3)*d(i0,i4)^2
 pv(95) = SYM d(i0,i2)*d(i1,i2)*d(i0,i3)*d(i1,i3)*d(i0,i4)*d(i1,i4)
 pv(96) = SYM d(i0,i1)*d(i0,i2)*d(i0,i3)*d(i2,i3)*d(i0,i4)*d(i1,i4)
 pv(97) = SYM d(i0,i1)*d(i1,i2)*d(i0,i3)*d(i2,i3)*d(i0,i4)*d(i1,i4)
 pv(98) = SYM d(i1,i2)^2*d(i0,i3)*d(i2,i3)*d(i0,i4)*d(i1,i4)
 pv(99) = SYM d(i0,i1)^2*d(i0,i2)*d(i0,i3)*d(i0,i4)*d(i0,i5)
 pv(100) = SYM d(i0,i1)^2*d(i1,i2)*d(i0,i3)*d(i0,i4)*d(i0,i5)
 pv(101) = SYM d(i0,i1)*d(i0,i2)*d(i1,i2)*d(i0,i3)*d(i0,i4)*d(i0,i5)
 pv(102) = SYM d(i0,i1)*d(i1,i2)^2*d(i0,i3)*d(i0,i4)*d(i0,i5)
 pv(103) = SYM d(i0,i1)*d(i1,i2)*d(i0,i3)^2*d(i0,i4)*d(i0,i5)
 pv(104) = SYM d(i0,i1)^2*d(i1,i2)*d(i1,i3)*d(i0,i4)*d(i0,i5)
 pv(105) = SYM d(i0,i1)*d(i0,i2)*d(i1,i2)*d(i1,i3)*d(i0,i4)*d(i0,i5)
 pv(106) = SYM d(i0,i2)^2*d(i1,i2)*d(i1,i3)*d(i0,i4)*d(i0,i5)
 pv(107) = SYM d(i0,i1)*d(i1,i2)^2*d(i1,i3)*d(i0,i4)*d(i0,i5)
 pv(108) = SYM d(i0,i2)*d(i1,i2)^2*d(i1,i3)*d(i0,i4)*d(i0,i5)
 pv(109) = SYM d(i0,i2)*d(i1,i2)*d(i0,i3)*d(i1,i3)*d(i0,i4)*d(i0,i5)
 pv(110) = SYM d(i1,i2)^2*d(i0,i3)*d(i1,i3)*d(i0,i4)*d(i0,i5)
 pv(111) = SYM d(i0,i1)*d(i1,i2)*d(i1,i3)*d(i2,i3)*d(i0,i4)*d(i0,i5)
 pv(112) = SYM d(i0,i2)*d(i1,i2)*d(i1,i3)*d(i0,i4)^2*d(i0,i5)
 pv(113) = SYM d(i0,i2)*d(i1,i2)*d(i0,i3)*d(i1,i3)*d(i1,i4)*d(i0,i5)
 pv(114) = SYM d(i0,i1)^2*d(i0,i2)*d(i2,i3)*d(i1,i4)*d(i0,i5)
 pv(115) = SYM d(i0,i1)*d(i0,i2)*d(i1,i2)*d(i2,i3)*d(i1,i4)*d(i0,i5)
 pv(116) = SYM d(i0,i1)*d(i0,i2)*d(i0,i3)*d(i2,i3)*d(i1,i4)*d(i0,i5)
 pv(117) = SYM d(i0,i1)*d(i1,i2)*d(i0,i3)*d(i2,i3)*d(i1,i4)*d(i0,i5)
 pv(118) = SYM d(i0,i2)*d(i1,i2)*d(i0,i3)*d(i2,i3)*d(i1,i4)*d(i0,i5)
 pv(119) = SYM d(i1,i2)^2*d(i0,i3)*d(i2,i3)*d(i1,i4)*d(i0,i5)
 pv(120) = SYM d(i0,i1)*d(i0,i2)*d(i2,i3)^2*d(i1,i4)*d(i0,i5)
 pv(121) = SYM d(i1,i2)*d(i0,i3)*d(i2,i3)*d(i0,i4)*d(i1,i4)*d(i0,i5)
 pv(122) = SYM d(i0,i1)*d(i1,i3)*d(i2,i3)*d(i1,i4)*d(i2,i4)*d(i0,i5)
 pv(123) = SYM d(i0,i2)*d(i1,i2)*d(i1,i3)*d(i0,i4)*d(i0,i5)*d(i0,i6)
 pv(124) = SYM d(i0,i2)*d(i1,i2)*d(i1,i3)*d(i1,i4)*d(i0,i5)*d(i0,i6)
 v(38:125) = pv(37:124)
> quit;

Total time: 985.960 seconds, Total memory usage: 7813.53MB
